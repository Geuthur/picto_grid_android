#!/bin/sh
# !!!don"t edit this file
# picto_grid
# Hook created by
#   Version: 1.0.1
#   At: 2025-06-14 12:18:07.645453
#   See: #readme

# From
#   Homepage: #readme

hookName=`basename "$0"`
gitParams="$*"
program_exists() {
    local ret="0"
    command -v $1 >/dev/null 2>&1 || { local ret="1"; }
    if [ "$ret" -ne 0 ]; then
        return 1
    fi
    return 0
}
# Dart Pre-commit Hook
if program_exists dart; then
  echo "Executing pre-commit hook"
  dart_fix_result=$(dart run dart_pre_commit)
  dart_fix_exit_code=$?
  # Check if pre-commit succeeded
  if [ $dart_fix_exit_code -ne 0 ]; then
    echo "dart run dart_pre_commit command failed to execute."
    echo "Exit code: $dart_fix_exit_code"
    echo "Output: $dart_fix_result"
    exit 1
  fi

  # Check if dart_pre_commit made any changes
  if ! git diff --quiet; then
    echo "dart_pre_commit made changes to the code:"
    echo "$dart_fix_result"
    exit 1
  else
    echo "No changes made by dart_pre_commit."
  fi
else
  echo "git_hooks > $hookName"
  echo "Cannot find dart in PATH"
fi

# Python Pre-commit Hook
INSTALL_PYTHON='.venv\Scripts\python.exe'
ARGS=(hook-impl --config=.pre-commit-config.yaml --hook-type=pre-commit)
# end templated

HERE="$(cd "$(dirname "$0")" && pwd)"
ARGS+=(--hook-dir "$HERE" -- "$@")

if [ -x "$INSTALL_PYTHON" ]; then
    exec "$INSTALL_PYTHON" -mpre_commit "${ARGS[@]}"
elif command -v pre-commit > /dev/null; then
    exec pre-commit "${ARGS[@]}"
else
    echo '`pre-commit` not found.  Did you forget to activate your virtualenv?' 1>&2
    exit 1
fi
